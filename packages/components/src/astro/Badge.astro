---
import type { HTMLTag, HTMLAttributes } from "astro/types";
import {
  css,
  cx,
  cva,
  type RecipeVariantProps,
} from "@cieloazul310/sarkara-css/css";

const badge = cva({
  base: {
    rounded: "md",
    px: 2,
    py: 1,
    fontWeight: "bolder",
    color: { base: "colorPalette.800", _dark: "colorPalette.100" },
    bg: { base: "colorPalette.100", _dark: "colorPalette.800" },
  },
  variants: {
    size: {
      xs: { fontSize: "xs" },
      sm: { fontSize: "sm" },
      md: { fontSize: "md" },
      lg: { fontSize: "lg" },
    },
  },
  defaultVariants: {
    size: "sm",
  },
});

export type Props<T extends HTMLTag> = RecipeVariantProps<typeof badge> &
  HTMLAttributes<T> & {
    colorPalette?: string;
    as?: T;
  };
const { size, colorPalette = "neutral", as = "span", ...props } = Astro.props;
const Element = as;
---

<Element class={cx(css({ colorPalette }), badge({ size }))} {...props}>
  <slot />
</Element>
