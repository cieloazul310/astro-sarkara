---
/**
 * @todo
 * should use Polymorphic type but it not works well...
 * https://docs.astro.build/en/guides/typescript/#polymorphic-type
 */
import type { HTMLTag, Polymorphic } from "astro/types";
import { useLink } from "@cieloazul310/astro-sarkara-utils";
import {
  css,
  cx,
  cva,
  type RecipeVariantProps,
} from "@cieloazul310/sarkara-css/css";

const badge = cva({
  base: {
    rounded: "md",
    px: 2,
    py: 1,
    fontWeight: "bolder",
    color: { base: "colorPalette.800", _dark: "colorPalette.100" },
    bg: { base: "colorPalette.100", _dark: "colorPalette.900" },
  },
  variants: {
    size: {
      xs: { fontSize: "xs" },
      sm: { fontSize: "sm" },
      md: { fontSize: "md" },
      lg: { fontSize: "lg" },
    },
  },
  defaultVariants: {
    size: "sm",
  },
});

export type Props<Tag extends HTMLTag> = RecipeVariantProps<typeof badge> &
  Polymorphic<{ as: Tag }> & {
    colorPalette?: string;
  };
const {
  size,
  as: Tag = "span",
  colorPalette = "neutral",
  ...props
} = Astro.props;

const link = Tag === "a" && props.href ? useLink(props.href) : {};
---

<Tag class={cx(css({ colorPalette }), badge({ size }))} {...props} {...link}>
  <slot />
</Tag>
